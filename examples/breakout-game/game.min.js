! function(t) {
    var e = {};

    function s(i) {
        if (e[i]) return e[i].exports;
        var a = e[i] = {
            i: i,
            l: !1,
            exports: {}
        };
        return t[i].call(a.exports, a, a.exports, s), a.l = !0, a.exports
    }
    s.m = t, s.c = e, s.d = function(t, e, i) {
        s.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: i
        })
    }, s.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }, s.t = function(t, e) {
        if (1 & e && (t = s(t)), 8 & e) return t;
        if (4 & e && "object" == typeof t && t && t.__esModule) return t;
        var i = Object.create(null);
        if (s.r(i), Object.defineProperty(i, "default", {
                enumerable: !0,
                value: t
            }), 2 & e && "string" != typeof t)
            for (var a in t) s.d(i, a, function(e) {
                return t[e]
            }.bind(null, a));
        return i
    }, s.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        } : function() {
            return t
        };
        return s.d(e, "a", e), e
    }, s.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }, s.p = "", s(s.s = 0)
}([function(t, e, s) {
    "use strict";
    s.r(e);
    class i {
        constructor(t, e) {
            var s = {},
                i = 1e3 / e,
                a = window.performance.now(),
                o = {
                    new: {
                        frameCount: 0,
                        startTime: a,
                        sinceStart: 0
                    },
                    old: {
                        frameCount: 0,
                        startTime: a,
                        sineStart: 0
                    }
                },
                n = "new";
            return s.fps = 0, s.main = function(r) {
                s.stopLoop = window.requestAnimationFrame(s.main);
                var c, h, p = r,
                    d = p - a;
                if (d > i) {
                    for (var u in a = p - d % i, o) ++o[u].frameCount, o[u].sinceStart = p - o[u].startTime;
                    c = o[n], s.fps = Math.round(1e3 / (c.sinceStart / c.frameCount) * 100) / 100, h = o.new.frameCount === o.old.frameCount ? 5 * e : 10 * e, c.frameCount > h && (o[n].frameCount = 0, o[n].startTime = p, o[n].sinceStart = 0, n = "new" === n ? "old" : "new"), t.update(t, p), t.render(t, p)
                }
            }, s.main(), s
        }
    }
    class a {
        constructor(t, e, s) {
            s = document.querySelector(s || "body");
            var i = document.createElement("canvas"),
                a = i.getContext("2d"),
                o = window.devicePixelRatio / ["webkitBackingStorePixelRatio", "mozBackingStorePixelRatio", "msBackingStorePixelRatio", "oBackingStorePixelRatio", "backingStorePixelRatio"].reduce(function(t, e) {
                    return Object.prototype.hasOwnProperty.call(a, e) ? a[e] : 1
                });
            return i.width = Math.round(t * o), i.height = Math.round(e * o), i.style.width = t + "px", i.style.height = e + "px", a.setTransform(o, 0, 0, o, 0, 0), s.insertBefore(i, s.firstChild), i
        }
    }
    class o {
        constructor(t, e, s, i, a) {
            this.entities = [], this.state = {
                container: t,
                size: {
                    x: 10,
                    y: 10
                }
            }
        }
        addObject(t) {
            this.entities.push(t)
        }
        removeObject(t) {
            this.entities.splice(t, 1)
        }
        update() {
            this.entities.forEach(function(t) {
                switch (t.update(), t.type) {
                    case "dynamic":
                    case "kinematic":
                    case "default":
                        t.state.vel.x += t.state.accel.x, t.state.vel.y += t.state.accel.y, t.state.pos.x += t.state.vel.x, t.state.pos.y += t.state.vel.y
                }
            })
        }
        render() {
            this.entities.forEach(function(t) {
                t.render()
            })
        }
        clearContext(t, e) {
            t.clearRect(0, 0, e.x, e.y)
        }
    }
    class n extends o {
        constructor() {
            super(), this.state = {
                size: {
                    x: 10,
                    y: 10
                },
                pos: {
                    x: 0,
                    y: 0
                },
                vel: {
                    x: 0,
                    y: 0
                },
                accel: {
                    x: 0,
                    y: 0
                },
                radius: 10,
                angle: 0
            }, this.type = "kinematic"
        }
    }
    class r extends n {
        constructor(t, e) {
            super(), this.scope = t, this.state.pos = e.pos || {
                x: 0,
                y: 0
            }, this.state.crop = {
                x: 0,
                y: 0
            }, this.state.size = e.size || {
                x: 0,
                y: 0
            }, this.state.frames = e.frames || [], this.state.angle = e.angle || 0, this.state.image = e.image || new Image, this.state.delay = e.delay || 5, this.state.tick = e.tick || 0, this.state.orientation = e.orientation || "horizontal"
        }
        update() {
            super.update(), this.state.tick <= 0 && ("vertical" === this.orientation ? (this.state.crop.y = this.state.frames.shift(), this.state.frames.push(this.state.crop.y)) : (this.state.crop.x = this.state.frames.shift(), this.state.frames.push(this.state.crop.x)), this.state.tick = this.state.delay), this.state.tick--
        }
        render() {
            super.render(), this.scope.context.save(), this.scope.context.translate(this.state.crop.x + this.state.size.x / 2, this.state.crop.y + this.state.size.y / 2), this.scope.context.rotate(this.state.angle * (Math.PI / 180)), this.scope.context.translate(-(this.state.crop.x + this.state.size.x / 2), -(this.state.crop.y + this.state.size.y / 2)), this.scope.context.drawImage(this.state.image, this.state.crop.x * this.state.size.x, this.state.crop.y * this.state.size.y, this.state.size.x, this.state.size.y, this.state.pos.x, this.state.pos.y, this.state.size.x, this.state.size.y), this.scope.context.restore()
        }
    }
    var c = new class {
            constructor() {
                this.rescache = {}
            }
            load(t, e) {
                var s = this;
                t instanceof Array ? t.forEach(function(t) {
                    s.rescache[t] = !1, s.fetch(t, e)
                }) : (s.rescache[t] = !1, s.fetch(t, e))
            }
            fetch(t, e) {
                var s = this;
                if (s.rescache[t]) return s.rescache[t];
                var i = new Image;
                i.onload = function() {
                    s.rescache[t] = i, s.ready(e)
                }, i.src = t
            }
            ready(t) {
                if ("function" == typeof t) {
                    var e = !0;
                    for (var s in this.rescache) Object.prototype.hasOwnProperty.call(this.rescache, s) && !this.rescache[s] && (e = !1);
                    e && t()
                }
            }
        },
        h = new class {
            constructor() {
                this.sounds = {}, this.instances = [], this.defaultVolume = 1
            }
            load(t, e, s) {
                if (this.sounds[t] = new Audio(e), "function" != typeof s) return new Promise((e, s) => {
                    this.sounds[t].addEventListener("canplaythrough", e), this.sounds[t].addEventListener("error", s)
                });
                this.sounds[t].addEventListener("canplaythrough", s)
            }
            remove(t) {
                void 0 !== this.sounds && delete this.sounds[t]
            }
            unlock(t, e, s, i) {
                var a = this,
                    o = ["touchstart", "touchend", "mousedown", "keydown"],
                    n = function n() {
                        o.forEach(function(t) {
                            document.body.removeEventListener(t, n)
                        }), a.play(t, e, s, i)
                    };
                o.forEach(function(t) {
                    document.body.addEventListener(t, n, !1)
                })
            }
            play(t, e, s, i) {
                if (i = i || !1, void 0 === this.sounds[t]) return console.error("Can't find sound called '" + t + "'."), !1;
                var a = this.sounds[t].cloneNode(!0);
                return a.volume = "number" == typeof s ? s : this.defaultVolume, a.loop = i, a.play(), this.instances.push(a), a.addEventListener("ended", () => {
                    var t = this.instances.indexOf(a); - 1 !== t && this.instances.splice(t, 1)
                }), "function" == typeof e ? (a.addEventListener("ended", e), !0) : new Promise((t, e) => a.addEventListener("ended", t))
            }
            stopAll() {
                var t = this.instances.slice();
                for (var e of t) e.pause(), e.dispatchEvent(new Event("ended"))
            }
        };
    class p extends o {
        constructor(t, e, s) {
            super(), this.state.size = {
                x: e,
                y: s
            }, this.state.pos = {
                x: 0,
                y: 0
            }, this.viewport = new a(this.state.size.x, this.state.size.y, t), this.context = this.viewport.getContext("2d"), this.context.fillStyle = "#fff", this.loop = new i(this, 60), this.ball = this.entities.push(new d(this)) - 1, this.paddle = this.entities.push(new l(this)) - 1, this.bamboos = this.started = this.score = 0
        }
        update() {
            this.started < 1 || (this.bamboos <= 0 && this.newgame(this.state.size.y / 2 / 53, this.state.size.x / 138), super.update())
        }
        render() {
            this.clearContext(this.context, this.state.size);
            var t = this;
            document.addEventListener("click", function() {
                t.started++
            }), this.started < 1 ? this.context.drawImage(c.fetch("./media/TapToPlay@3x.png"), (this.state.size.x - 300) / 2, (this.state.size.y - 180) / 2, 300, 180) : (this.context.font = "2em Arial", this.context.fillText("SCORE: ️" + this.score, 16, 50, this.state.size.x), super.render())
        }
        newgame(t, e) {
            for (var s = 0; s < t; s++)
                for (var i = 0; i < e; i++) {
                    var a = this.entities.push(new u(this, {
                        x: 138 * i,
                        y: 53 * s
                    })) - 1;
                    this.entities[a].id = a, this.bamboos++
                }
        }
    }
    class d extends r {
        constructor(t) {
            super(t, {
                frames: [0],
                image: c.fetch("./media/ball@3x.png")
            }), this.scope = t, this.state.vel = {
                x: 8,
                y: -5
            }, this.state.size = {
                x: 48,
                y: 48
            }, this.state.pos = {
                x: t.state.size.x / 2 - this.state.size.x / 2,
                y: t.state.size.y / 2 - this.state.size.y
            }
        }
        update() {
            super.update(), (this.state.pos.x + this.state.size.x > this.scope.state.size.x || this.state.pos.x < 0) && (this.state.vel.x *= -1), (this.state.pos.y + this.state.size.y > this.scope.state.size.y || this.state.pos.y < 0) && (this.state.vel.y *= -1), y.detect(this.scope.entities[this.scope.paddle], this) && (this.state.vel.y *= -1)
        }
    }
    class u extends r {
        constructor(t, e) {
            super(t, {
                frames: [0],
                image: c.fetch("./media/block@3x.png")
            }), this.scope = t, this.state.size = {
                x: 138,
                y: 53
            }, this.state.pos = {
                x: e.x,
                y: e.y
            }
        }
        update() {
            if (super.update(), y.detect(this.scope.entities[this.scope.ball], this)) {
                this.scope.score += 10, this.scope.bamboos--, h.play("pop");
                var t = this.id;
                this.scope.entities = this.scope.entities.filter(function(e) {
                    return e.id != t
                })
            }
        }
    }
    class l extends r {
        constructor(t) {
            super(t, {
                frames: [0],
                image: c.fetch("./media/paddle@3x.png")
            }), this.scope = t, this.state.size = {
                x: 180,
                y: 69
            }
        }
        update() {
            super.update(), this.state.pos = {
                x: this.scope.entities[this.scope.ball].state.pos.x + 25 - this.state.size.x / 2,
                y: this.scope.state.size.y - this.state.size.y
            }
        }
    }
    class y {
        static detect(t, e) {
            var s = t.state.pos.x,
                i = t.state.pos.y,
                a = s + t.state.size.x,
                o = i + t.state.size.y,
                n = e.state.pos.x,
                r = e.state.pos.y,
                c = n + e.state.size.x,
                h = r + e.state.size.y;
            return !(o < r || i > h || a < n || s > c)
        }
        static solve(t, e) {
            var s = .5 * t.state.size.x + t.state.pos.x,
                i = .5 * t.state.size.y + t.state.pos.y,
                a = .5 * e.state.size.x + e.state.pos.x,
                o = .5 * e.state.size.y + e.state.pos.y,
                n = (a - s) / e.state.size.y * .5,
                r = (o - i) / e.state.size.y * .5,
                c = abs(n),
                h = abs(r);
            abs(c - h) < .1 ? (t.state.pos.x = n < 0 ? e.state.pos.x + e.state.size.x : e.state.pos.x - t.state.size.x, t.state.pos.y = r < 0 ? e.state.pos.y + e.state.size.y : e.state.pos.y - t.state.size.y, Math.random() < .5 ? (t.state.vel.x = -t.state.vel.x * e.restitution, abs(t.state.vel.x) < STICKY_THRESHOLD && (t.state.vel.x = 0)) : (t.state.vel.y = -t.state.vel.y * e.restitution, abs(t.state.vel.y) < STICKY_THRESHOLD && (t.state.vel.y = 0))) : c > h ? (t.state.pos.x = n < 0 ? e.state.pos.x + e.state.size.x : e.state.pos.x - t.state.size.x, t.state.vel.x = -t.state.vel.x * e.restitution, abs(t.state.vel.x) < STICKY_THRESHOLD && (t.state.vel.x = 0)) : (t.state.pos.y = r < 0 ? e.state.pos.y + e.state.size.y : e.state.pos.y - t.state.size.y, t.state.vel.y = -t.state.vel.y * e.restitution, abs(t.state.vel.y) < STICKY_THRESHOLD && (t.state.vel.y = 0))
        }
    }
    h.load("pop", "./media/music/pop.ogg", function() {
        c.load(["./media/ball@3x.png", "./media/paddle@3x.png", "./media/block@3x.png", "./media/block_break01@3x.png", "./media/TapToPlay@3x.png"], function() {
            window.game = new p("#container", window.innerWidth, window.innerHeight, 60, !0)
        })
    })
}]);