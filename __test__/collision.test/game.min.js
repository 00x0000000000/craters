! function(t) {
    var e = {};

    function n(s) {
        if (e[s]) return e[s].exports;
        var r = e[s] = {
            i: s,
            l: !1,
            exports: {}
        };
        return t[s].call(r.exports, r, r.exports, n), r.l = !0, r.exports
    }
    n.m = t, n.c = e, n.d = function(t, e, s) {
        n.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: s
        })
    }, n.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }, n.t = function(t, e) {
        if (1 & e && (t = n(t)), 8 & e) return t;
        if (4 & e && "object" == typeof t && t && t.__esModule) return t;
        var s = Object.create(null);
        if (n.r(s), Object.defineProperty(s, "default", {
                enumerable: !0,
                value: t
            }), 2 & e && "string" != typeof t)
            for (var r in t) n.d(s, r, function(e) {
                return t[e]
            }.bind(null, r));
        return s
    }, n.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        } : function() {
            return t
        };
        return n.d(e, "a", e), e
    }, n.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }, n.p = "", n(n.s = 9)
}([function(t, e, n) {
    t.exports = n(10)
}, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }), n.d(e, "b", function() {
        return s
    }), n.d(e, "c", function() {
        return i
    });
    class s {
        constructor(t, e, n, s, r) {
            this.entities = [], this.state = {
                container: t,
                size: {
                    x: 512,
                    y: 512
                },
                gravity: {
                    x: 0,
                    y: 0
                },
                friction: {
                    x: 0,
                    y: 0
                }
            }
        }
        addObject(t) {
            return this.entities.push(t)
        }
        removeObject(t) {
            return this.entities.splice(t, 1)
        }
        update() {
            this.entities.forEach(t => {
                switch (t.update(), t.type) {
                    case "dynamic":
                        t.state.vel.x += t.state.accel.x + (t.state.gravity.x + this.state.gravity.x), t.state.vel.y += t.state.accel.y + (t.state.gravity.y + this.state.gravity.y), t.state.pos.x += t.state.vel.x, t.state.pos.y += t.state.vel.y;
                        var e = t.state.friction.x,
                            n = t.state.vel.x + e,
                            s = t.state.vel.x - e,
                            r = t.state.friction.y,
                            i = t.state.vel.y + r,
                            o = t.state.vel.y - r;
                        t.state.vel.x = n < 0 ? n : s > 0 ? s : 0, t.state.vel.y = i < 0 ? i : o > 0 ? o : 0;
                        break;
                    case "kinematic":
                        t.state.vel.x += t.state.accel.x, t.state.vel.y += t.state.accel.y, t.state.pos.x += t.state.vel.x, t.state.pos.y += t.state.vel.y
                }
            })
        }
        render() {
            this.entities.forEach(t => {
                t.render()
            })
        }
    }
    class r extends s {
        constructor() {
            super(), this.state.size = {
                x: 10,
                y: 10
            }, this.state.pos = {
                x: 0,
                y: 0
            }, this.state.vel = {
                x: 0,
                y: 0
            }, this.state.accel = {
                x: 0,
                y: 0
            }, this.state.radius = 10, this.state.angle = 0, this.type = "dynamic"
        }
    }
    class i extends r {
        constructor(t, e) {
            super(), this.scope = t, this.state.pos = e.pos || {
                x: 0,
                y: 0
            }, this.state.crop = {
                x: 0,
                y: 0
            }, this.state.size = e.size || {
                x: 0,
                y: 0
            }, this.state.frames = e.frames || [], this.state.angle = e.angle || 0, this.state.image = e.image || new Image, this.state.delay = e.delay || 5, this.state.tick = e.tick || 0, this.state.orientation = e.orientation || "horizontal"
        }
        update() {
            super.update(), this.state.tick <= 0 && ("vertical" === this.orientation ? (this.state.crop.y = this.state.frames.shift(), this.state.frames.push(this.state.crop.y)) : (this.state.crop.x = this.state.frames.shift(), this.state.frames.push(this.state.crop.x)), this.state.tick = this.state.delay), this.state.tick--
        }
        render() {
            super.render(), this.scope.context.save(), this.scope.context.translate(this.state.crop.x + this.state.size.x / 2, this.state.crop.y + this.state.size.y / 2), this.scope.context.rotate(this.state.angle * (Math.PI / 180)), this.scope.context.translate(-(this.state.crop.x + this.state.size.x / 2), -(this.state.crop.y + this.state.size.y / 2)), this.scope.context.drawImage(this.state.image, this.state.crop.x * this.state.size.x, this.state.crop.y * this.state.size.y, this.state.size.x, this.state.size.y, this.state.pos.x, this.state.pos.y, this.state.size.x, this.state.size.y), this.scope.context.restore()
        }
    }
}, function(t, e, n) {
    "use strict";
    n.r(e), n.d(e, "boundary", function() {
        return a
    }), n.d(e, "degToRad", function() {
        return s
    }), n.d(e, "radToDeg", function() {
        return r
    }), n.d(e, "distance", function() {
        return i
    }), n.d(e, "map", function() {
        return o
    });
    const s = function(t) {
            return t * Math.PI / 180
        },
        r = function(t) {
            return 180 * t / Math.PI
        },
        i = function(t, e, n, s) {
            return Math.sqrt((n - t) * (n - t) + (s - e) * (s - e))
        },
        o = function(t, e, n, s, r) {
            return s + (r - s) * (t - e) / (n - e)
        },
        a = function(t, e, n) {
            return Math.min(Math.max(t, e), n)
        }
}, function(t, e) {
    var n;
    n = function() {
        return this
    }();
    try {
        n = n || new Function("return this")()
    } catch (t) {
        "object" == typeof window && (n = window)
    }
    t.exports = n
}, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return r
    }), n.d(e, "b", function() {
        return s
    });
    class s {
        constructor(t, e) {
            var n = {
                elapsed: 0,
                tframe: 1e3 / e,
                before: window.performance.now(),
                main: function() {
                    n.startLoop = window.requestAnimationFrame(n.main), n.fps = Math.round(1e3 / (window.performance.now() - n.before) * 100 / 100), window.performance.now() < n.before + n.tframe || (n.before = window.performance.now(), n.stopLoop = () => {
                        window.cancelAnimationFrame(n.startLoop)
                    }, t.update(n.elapsed, n.fps), t.render(n.elapsed, n.fps), n.elapsed++)
                }
            };
            return n.main(), n
        }
    }
    class r {
        constructor(t, e, n) {
            n = document.querySelector(n || "body");
            var s = document.createElement("canvas"),
                r = s.getContext("2d"),
                i = window.devicePixelRatio / ["webkitBackingStorePixelRatio", "mozBackingStorePixelRatio", "msBackingStorePixelRatio", "oBackingStorePixelRatio", "backingStorePixelRatio"].reduce(function(t, e) {
                    return Object.prototype.hasOwnProperty.call(r, e) ? r[e] : 1
                });
            return s.width = Math.round(t * i), s.height = Math.round(e * i), s.style.width = t + "px", s.style.height = e + "px", r.setTransform(i, 0, 0, i, 0, 0), n.insertBefore(s, n.firstChild), s.context = s.getContext("2d"), s.resize = (t, e) => {
                s.style.width = e.x + "px", s.style.height = e.y + "px", s.width = Math.round(e.x * i), s.height = Math.round(e.y * i), r.setTransform(i, 0, 0, i, 0, 0), t.state.size.x = e.x, t.state.size.y = e.y
            }, s.clear = (t, e, n, r) => {
                t = t || 0, e = e || 0, n = n || s.width, r = r || s.height, s.context.clearRect(t, e, n, r)
            }, s.camera = (t, e) => {
                s.context.setTransform(1, 0, 0, 1, 0, 0), s.context.translate(-t, -e)
            }, s
        }
    }
}, function(t, e, n) {
    "use strict";
    n.r(e), n.d(e, "Vector", function() {
        return r
    });
    var s = n(2);
    const r = function(t, e) {
        this.x = t || 0, this.y = e || 0
    };
    r.prototype = {
        clone: function() {
            return new r(this.x, this.y)
        },
        set: function(t, e) {
            return "x" === t ? this.x = e : "y" === t && (this.y = e), this
        },
        add: function() {
            let t, e, n = arguments;
            if (1 === n.length) {
                let s = n[0];
                "object" == typeof s && (t = s.x, e = s.y)
            } else 2 === n.length && "number" == typeof n[0] && "number" == typeof n[1] && (t = n[0], e = n[1]);
            return this.x += t, this.y += e, this
        },
        subtract: function(t) {
            return this.x -= t.x, this.y -= t.y, this
        },
        multiply: function(t) {
            return "object" == typeof t ? (this.x *= t.x, this.y *= t.y) : "number" == typeof t && (this.x *= t, this.y *= t), this
        },
        magnitude: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        magnitudeSq: function() {
            return this.x * this.x + this.y * this.y
        },
        negate: function() {
            return this.x = -this.x, this.y = -this.y, this
        },
        rotate: function(t) {
            let e = Math.sin(t),
                n = Math.cos(t),
                s = this.x * n - this.y * e,
                r = this.x * e + this.y * n;
            return this.x = s, this.y = r, this
        },
        dot: function(t) {
            return this.x * t.x + this.y * t.y
        },
        cross: function(t) {
            return this.x * t.y - this.y * t.x
        },
        angleTo: function(t) {
            let e = this.magnitude(),
                n = t.magnitude(),
                s = this.dot(t);
            return Math.acos(s / (e * n))
        },
        getAngle: function(t) {
            if ("DEGREES" === t) return Object(s.radToDeg)(Math.atan(this.y / this.x));
            let e = Math.atan2(this.y, this.x);
            return e < 0 ? 2 * Math.PI + e : e
        },
        normalize: function() {
            let t = this.magnitude();
            return this.x /= t, this.y /= t, this
        },
        perp: function(t) {
            if ("right" === t) {
                let t = this.x;
                this.x = this.y, this.y = -t
            } else {
                let t = this.x;
                this.x = -this.y, this.y = t
            }
            return this
        },
        distanceTo: function(t) {
            return Math.sqrt((t.x - this.x) * (t.x - this.x) + (t.y - this.y) * (t.y - this.y))
        },
        scalarProject: function(t) {
            return this.dot(t) / t.magnitude()
        },
        scalarProjectUnit: function(t) {
            return this.dot(t)
        },
        vectorProject: function(t) {
            let e = this.dot(t) / t.magnitudeSq();
            return this.x = t.x * e, this.y = t.y * e, this
        },
        vectorProjectUnit: function(t) {
            let e = this.dot(t);
            return this.x = t.x * e, this.y = t.y * e, this
        }
    }, r.prototype.translate = r.prototype.add;
    r.add = function(t, e) {
        return new r(t.x + e.x, t.y + e.y)
    }, r.subtract = function(t, e) {
        return new r(t.x - e.x, t.y - e.y)
    }, r.multiply = function(t, e) {
        return "number" == typeof t && "number" == typeof e ? t * e : "object" == typeof t && "number" == typeof e ? new r(t.x * e, t.y * e) : "object" == typeof e && "number" == typeof t ? new r(t * e.x, t * e.y) : new r(t.x * e.x, t.y * e.y)
    }, r.dot = function(t, e) {
        return t.x * e.x + t.y * e.y
    }, r.angleBetween = function(t, e) {
        let n = t.magnitude(),
            s = e.magnitude(),
            r = t.dot(e);
        return Math.acos(r / (n * s))
    }, r.perp = function(t, e) {
        switch (e) {
            case "right":
                return new r(t.y, -t.x);
            default:
                return new r(-t.y, t.x)
        }
    }, r.negate = function(t) {
        return new r(-t.x, -t.y)
    }, e.default = function(t, e) {
        return new r(t, e)
    }
}, function(t, e, n) {
    var s, r;
    /** @preserve SAT.js - Version 0.8.0 - Copyright 2012 - 2018 - Jim Riecken <jimr@jimr.ca> - released under the MIT License. https://github.com/jriecken/sat-js */
    /** @preserve SAT.js - Version 0.8.0 - Copyright 2012 - 2018 - Jim Riecken <jimr@jimr.ca> - released under the MIT License. https://github.com/jriecken/sat-js */
    ! function(i, o) {
        "use strict";
        void 0 === (r = "function" == typeof(s = function() {
            var t = {};

            function e(t, e) {
                this.x = t || 0, this.y = e || 0
            }

            function n(t, n) {
                this.pos = t || new e, this.r = n || 0, this.offset = new e
            }

            function s(t, n) {
                this.pos = t || new e, this.angle = 0, this.offset = new e, this.setPoints(n || [])
            }

            function r(t, n, s) {
                this.pos = t || new e, this.w = n || 0, this.h = s || 0
            }

            function i() {
                this.a = null, this.b = null, this.overlapN = new e, this.overlapV = new e, this.clear()
            }
            t.Vector = e, t.V = e, e.prototype.copy = e.prototype.copy = function(t) {
                return this.x = t.x, this.y = t.y, this
            }, e.prototype.clone = e.prototype.clone = function() {
                return new e(this.x, this.y)
            }, e.prototype.perp = e.prototype.perp = function() {
                var t = this.x;
                return this.x = this.y, this.y = -t, this
            }, e.prototype.rotate = e.prototype.rotate = function(t) {
                var e = this.x,
                    n = this.y;
                return this.x = e * Math.cos(t) - n * Math.sin(t), this.y = e * Math.sin(t) + n * Math.cos(t), this
            }, e.prototype.reverse = e.prototype.reverse = function() {
                return this.x = -this.x, this.y = -this.y, this
            }, e.prototype.normalize = e.prototype.normalize = function() {
                var t = this.len();
                return t > 0 && (this.x = this.x / t, this.y = this.y / t), this
            }, e.prototype.add = e.prototype.add = function(t) {
                return this.x += t.x, this.y += t.y, this
            }, e.prototype.sub = e.prototype.sub = function(t) {
                return this.x -= t.x, this.y -= t.y, this
            }, e.prototype.scale = e.prototype.scale = function(t, e) {
                return this.x *= t, this.y *= void 0 !== e ? e : t, this
            }, e.prototype.project = e.prototype.project = function(t) {
                var e = this.dot(t) / t.len2();
                return this.x = e * t.x, this.y = e * t.y, this
            }, e.prototype.projectN = e.prototype.projectN = function(t) {
                var e = this.dot(t);
                return this.x = e * t.x, this.y = e * t.y, this
            }, e.prototype.reflect = e.prototype.reflect = function(t) {
                var e = this.x,
                    n = this.y;
                return this.project(t).scale(2), this.x -= e, this.y -= n, this
            }, e.prototype.reflectN = e.prototype.reflectN = function(t) {
                var e = this.x,
                    n = this.y;
                return this.projectN(t).scale(2), this.x -= e, this.y -= n, this
            }, e.prototype.dot = e.prototype.dot = function(t) {
                return this.x * t.x + this.y * t.y
            }, e.prototype.len2 = e.prototype.len2 = function() {
                return this.dot(this)
            }, e.prototype.len = e.prototype.len = function() {
                return Math.sqrt(this.len2())
            }, t.Circle = n, n.prototype.getAABB = n.prototype.getAABB = function() {
                var t = this.r,
                    n = this.pos.clone().add(this.offset).sub(new e(t, t));
                return new r(n, 2 * t, 2 * t).toPolygon()
            }, n.prototype.setOffset = n.prototype.setOffset = function(t) {
                return this.offset = t, this
            }, t.Polygon = s, s.prototype.setPoints = s.prototype.setPoints = function(t) {
                var n = !this.points || this.points.length !== t.length;
                if (n) {
                    var s, r = this.calcPoints = [],
                        i = this.edges = [],
                        o = this.normals = [];
                    for (s = 0; s < t.length; s++) {
                        var a = t[s],
                            c = s < t.length - 1 ? t[s + 1] : t[0];
                        a === c || a.x !== c.x || a.y !== c.y ? (r.push(new e), i.push(new e), o.push(new e)) : (t.splice(s, 1), s -= 1)
                    }
                }
                return this.points = t, this._recalc(), this
            }, s.prototype.setAngle = s.prototype.setAngle = function(t) {
                return this.angle = t, this._recalc(), this
            }, s.prototype.setOffset = s.prototype.setOffset = function(t) {
                return this.offset = t, this._recalc(), this
            }, s.prototype.rotate = s.prototype.rotate = function(t) {
                for (var e = this.points, n = e.length, s = 0; s < n; s++) e[s].rotate(t);
                return this._recalc(), this
            }, s.prototype.translate = s.prototype.translate = function(t, e) {
                for (var n = this.points, s = n.length, r = 0; r < s; r++) n[r].x += t, n[r].y += e;
                return this._recalc(), this
            }, s.prototype._recalc = function() {
                var t, e = this.calcPoints,
                    n = this.edges,
                    s = this.normals,
                    r = this.points,
                    i = this.offset,
                    o = this.angle,
                    a = r.length;
                for (t = 0; t < a; t++) {
                    var c = e[t].copy(r[t]);
                    c.x += i.x, c.y += i.y, 0 !== o && c.rotate(o)
                }
                for (t = 0; t < a; t++) {
                    var u = e[t],
                        h = t < a - 1 ? e[t + 1] : e[0],
                        p = n[t].copy(h).sub(u);
                    s[t].copy(p).perp().normalize()
                }
                return this
            }, s.prototype.getAABB = s.prototype.getAABB = function() {
                for (var t = this.calcPoints, n = t.length, s = t[0].x, i = t[0].y, o = t[0].x, a = t[0].y, c = 1; c < n; c++) {
                    var u = t[c];
                    u.x < s ? s = u.x : u.x > o && (o = u.x), u.y < i ? i = u.y : u.y > a && (a = u.y)
                }
                return new r(this.pos.clone().add(new e(s, i)), o - s, a - i).toPolygon()
            }, s.prototype.getCentroid = s.prototype.getCentroid = function() {
                for (var t = this.calcPoints, n = t.length, s = 0, r = 0, i = 0, o = 0; o < n; o++) {
                    var a = t[o],
                        c = o === n - 1 ? t[0] : t[o + 1],
                        u = a.x * c.y - c.x * a.y;
                    s += (a.x + c.x) * u, r += (a.y + c.y) * u, i += u
                }
                return new e(s /= i *= 3, r /= i)
            }, t.Box = r, r.prototype.toPolygon = r.prototype.toPolygon = function() {
                var t = this.pos,
                    n = this.w,
                    r = this.h;
                return new s(new e(t.x, t.y), [new e, new e(n, 0), new e(n, r), new e(0, r)])
            }, t.Response = i, i.prototype.clear = i.prototype.clear = function() {
                return this.aInB = !0, this.bInA = !0, this.overlap = Number.MAX_VALUE, this
            };
            for (var o = [], a = 0; a < 10; a++) o.push(new e);
            for (var c = [], a = 0; a < 5; a++) c.push([]);
            var u = new i,
                h = new r(new e, 1e-6, 1e-6).toPolygon();

            function p(t, e, n) {
                for (var s = Number.MAX_VALUE, r = -Number.MAX_VALUE, i = t.length, o = 0; o < i; o++) {
                    var a = t[o].dot(e);
                    a < s && (s = a), a > r && (r = a)
                }
                n[0] = s, n[1] = r
            }

            function l(t, e, n, s, r, i) {
                var a = c.pop(),
                    u = c.pop(),
                    h = o.pop().copy(e).sub(t),
                    l = h.dot(r);
                if (p(n, r, a), p(s, r, u), u[0] += l, u[1] += l, a[0] > u[1] || u[0] > a[1]) return o.push(h), c.push(a), c.push(u), !0;
                if (i) {
                    var f = 0;
                    if (a[0] < u[0])
                        if (i.aInB = !1, a[1] < u[1]) f = a[1] - u[0], i.bInA = !1;
                        else {
                            var y = a[1] - u[0],
                                d = u[1] - a[0];
                            f = y < d ? y : -d
                        }
                    else if (i.bInA = !1, a[1] > u[1]) f = a[0] - u[1], i.aInB = !1;
                    else {
                        var y = a[1] - u[0],
                            d = u[1] - a[0];
                        f = y < d ? y : -d
                    }
                    var v = Math.abs(f);
                    v < i.overlap && (i.overlap = v, i.overlapN.copy(r), f < 0 && i.overlapN.reverse())
                }
                return o.push(h), c.push(a), c.push(u), !1
            }

            function f(t, e) {
                var n = t.len2(),
                    s = e.dot(t);
                return s < 0 ? y : s > n ? v : d
            }
            t.isSeparatingAxis = l;
            var y = -1,
                d = 0,
                v = 1;

            function x(t, e, n) {
                for (var s = o.pop().copy(e.pos).add(e.offset).sub(t.pos), r = e.r, i = r * r, a = t.calcPoints, c = a.length, u = o.pop(), h = o.pop(), p = 0; p < c; p++) {
                    var l = p === c - 1 ? 0 : p + 1,
                        d = 0 === p ? c - 1 : p - 1,
                        x = 0,
                        m = null;
                    u.copy(t.edges[p]), h.copy(s).sub(a[p]), n && h.len2() > i && (n.aInB = !1);
                    var g = f(u, h);
                    if (g === y) {
                        u.copy(t.edges[d]);
                        var w = o.pop().copy(s).sub(a[d]);
                        if ((g = f(u, w)) === v) {
                            var b = h.len();
                            if (b > r) return o.push(s), o.push(u), o.push(h), o.push(w), !1;
                            n && (n.bInA = !1, m = h.normalize(), x = r - b)
                        }
                        o.push(w)
                    } else if (g === v) {
                        if (u.copy(t.edges[l]), h.copy(s).sub(a[l]), (g = f(u, h)) === y) {
                            var b = h.len();
                            if (b > r) return o.push(s), o.push(u), o.push(h), !1;
                            n && (n.bInA = !1, m = h.normalize(), x = r - b)
                        }
                    } else {
                        var M = u.perp().normalize(),
                            b = h.dot(M),
                            I = Math.abs(b);
                        if (b > 0 && I > r) return o.push(s), o.push(M), o.push(h), !1;
                        n && (m = M, x = r - b, (b >= 0 || x < 2 * r) && (n.bInA = !1))
                    }
                    m && n && Math.abs(x) < Math.abs(n.overlap) && (n.overlap = x, n.overlapN.copy(m))
                }
                return n && (n.a = t, n.b = e, n.overlapV.copy(n.overlapN).scale(n.overlap)), o.push(s), o.push(u), o.push(h), !0
            }

            function m(t, e, n) {
                for (var s = t.calcPoints, r = s.length, i = e.calcPoints, o = i.length, a = 0; a < r; a++)
                    if (l(t.pos, e.pos, s, i, t.normals[a], n)) return !1;
                for (var a = 0; a < o; a++)
                    if (l(t.pos, e.pos, s, i, e.normals[a], n)) return !1;
                return n && (n.a = t, n.b = e, n.overlapV.copy(n.overlapN).scale(n.overlap)), !0
            }
            return t.pointInCircle = function(t, e) {
                var n = o.pop().copy(t).sub(e.pos).sub(e.offset),
                    s = e.r * e.r,
                    r = n.len2();
                return o.push(n), r <= s
            }, t.pointInPolygon = function(t, e) {
                h.pos.copy(t), u.clear();
                var n = m(h, e, u);
                return n && (n = u.aInB), n
            }, t.testCircleCircle = function(t, e, n) {
                var s = o.pop().copy(e.pos).add(e.offset).sub(t.pos).sub(t.offset),
                    r = t.r + e.r,
                    i = r * r,
                    a = s.len2();
                if (a > i) return o.push(s), !1;
                if (n) {
                    var c = Math.sqrt(a);
                    n.a = t, n.b = e, n.overlap = r - c, n.overlapN.copy(s.normalize()), n.overlapV.copy(s).scale(n.overlap), n.aInB = t.r <= e.r && c <= e.r - t.r, n.bInA = e.r <= t.r && c <= t.r - e.r
                }
                return o.push(s), !0
            }, t.testPolygonCircle = x, t.testCirclePolygon = function(t, e, n) {
                var s = x(e, t, n);
                if (s && n) {
                    var r = n.a,
                        i = n.aInB;
                    n.overlapN.reverse(), n.overlapV.reverse(), n.a = n.b, n.b = r, n.aInB = n.bInA, n.bInA = i
                }
                return s
            }, t.testPolygonPolygon = m, t
        }) ? s.call(e, n, e, t) : s) || (t.exports = r)
    }()
}, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return s
    });
    class s {
        constructor() {
            this.rescache = {}
        }
        load(t, e) {
            var n = this;
            t instanceof Array ? t.forEach(function(t) {
                n.rescache[t] = !1, n.fetch(t, e)
            }) : (n.rescache[t] = !1, n.fetch(t, e))
        }
        fetch(t, e) {
            var n = this;
            if (n.rescache[t]) return n.rescache[t];
            var s = new Image;
            s.onload = function() {
                n.rescache[t] = s, n.ready(e)
            }, s.src = t
        }
        ready(t) {
            if ("function" == typeof t) {
                var e = !0;
                for (var n in this.rescache) Object.prototype.hasOwnProperty.call(this.rescache, n) && !this.rescache[n] && (e = !1);
                e && t()
            }
        }
    }
}, function(t, e, n) {
    "use strict";
    n.d(e, "a", function() {
        return s
    });
    class s {
        constructor() {
            this.sounds = {}, this.instances = [], this.defaultVolume = 1
        }
        load(t, e, n) {
            if (this.sounds[t] = new Audio(e), "function" != typeof n) return new Promise((e, n) => {
                this.sounds[t].addEventListener("canplaythrough", e), this.sounds[t].addEventListener("error", n)
            });
            this.sounds[t].addEventListener("canplaythrough", n)
        }
        remove(t) {
            void 0 !== this.sounds && delete this.sounds[t]
        }
        unlock(t, e, n, s) {
            var r = this,
                i = ["touchstart", "touchend", "mousedown", "keydown"],
                o = function o() {
                    i.forEach(function(t) {
                        document.body.removeEventListener(t, o)
                    }), r.play(t, e, n, s)
                };
            i.forEach(function(t) {
                document.body.addEventListener(t, o, !1)
            })
        }
        play(t, e, n, s) {
            if (s = s || !1, void 0 === this.sounds[t]) return console.error("Can't find sound called '" + t + "'."), !1;
            var r = this.sounds[t].cloneNode(!0);
            return r.volume = "number" == typeof n ? n : this.defaultVolume, r.loop = s, r.play(), this.instances.push(r), r.addEventListener("ended", () => {
                var t = this.instances.indexOf(r); - 1 !== t && this.instances.splice(t, 1)
            }), "function" == typeof e ? (r.addEventListener("ended", e), !0) : new Promise((t, e) => r.addEventListener("ended", t))
        }
        stopAll() {
            var t = this.instances.slice();
            for (var e of t) e.pause(), e.dispatchEvent(new Event("ended"))
        }
    }
}, function(t, e, n) {
    "use strict";
    n.r(e);
    var s = n(0),
        r = n(6);
    class i extends s.Entity {
        constructor(t) {
            super(), this.scope = t, this.type = "dynamic", this.shape = new r.Circle(new r.Vector(this.scope.state.size.x / 2, this.scope.state.size.x / 2), 10), this.state.pos = this.shape.pos, this.state.gravity.y = 1, this.state.friction = {
                x: .001,
                y: .001
            }, this.state.vel = {
                x: 1 * (Math.random() - .5),
                y: 5 * (Math.random() - .5)
            }
        }
        update() {
            super.update(), (this.state.pos.x + this.shape.r > this.scope.state.size.x || this.state.pos.x < 0) && (this.state.vel.x *= -1), (this.state.pos.y + this.shape.r > this.scope.state.size.y || this.state.pos.y < 0) && (this.state.vel.y *= -1), this.state.pos.y = s.Maths.boundary(this.state.pos.y, this.shape.r, this.scope.state.size.y - this.shape.r);
            for (var t = 0; t < this.scope.entities.length; t++)
                if (this.scope.entities[t].id != this.id) {
                    var e = new r.Response;
                    r.testCircleCircle(this.shape, this.scope.entities[t].shape, e) && (e.overlapV.scale(.5), this.state.pos.sub(e.overlapV), this.scope.entities[t].state.pos.add(e.overlapV))
                }
        }
        render() {
            this.scope.context.beginPath(), this.scope.context.arc(this.state.pos.x, this.state.pos.y, this.shape.r, 0, 2 * Math.PI), this.scope.context.lineWidth = 1, this.scope.context.strokeStyle = "#000", this.scope.context.fillStyle = "green", this.scope.context.fill(), this.scope.context.stroke()
        }
    }
    new class extends s.Game {
        constructor(t, e, n) {
            super(), this.state.size = {
                x: e,
                y: n
            }, this.loop = new s.Loop(this, 60), this.viewport = new s.Canvas(this.state.size.x, this.state.size.y, t), this.context = this.viewport.context, this.viewport.style.background = "#eee", this.viewport.resize(this, {
                x: window.innerWidth,
                y: window.innerHeight
            });
            for (var r = 0; r < 25; r++) {
                let t = this.addObject(new i(this)) - 1;
                this.entities[t].id = t
            }
        }
        render() {
            this.viewport.clear(), super.render()
        }
    }("#container", 1024, 512)
}, function(t, e, n) {
    "use strict";
    n.r(e),
        function(t, s) {
            n.d(e, "Craters", function() {
                return h
            });
            var r = n(5);
            n.d(e, "Vector", function() {
                return r
            });
            var i = n(2);
            n.d(e, "Maths", function() {
                return i
            });
            var o = n(4);
            n.d(e, "Canvas", function() {
                return o.a
            }), n.d(e, "Loop", function() {
                return o.b
            });
            var a = n(1);
            n.d(e, "Game", function() {
                return a.b
            }), n.d(e, "Entity", function() {
                return a.a
            }), n.d(e, "Sprite", function() {
                return a.c
            });
            var c = n(7);
            n.d(e, "Loader", function() {
                return c.a
            });
            var u = n(8);
            n.d(e, "Sound", function() {
                return u.a
            }), "undefined" == typeof window && t && (t.window = {
                performance: {
                    now: function(t) {
                        if (!t) return Date.now();
                        var e = Date.now(t);
                        return Math.round(1e3 * e[0] + e[1] / 1e6)
                    }
                },
                requestAnimationFrame: function(t) {
                    s(() => t(this.performance.now()))
                }
            });
            class h {
                static version() {
                    return "1.2.0"
                }
            }
        }.call(this, n(3), n(11).setImmediate)
}, function(t, e, n) {
    (function(t) {
        var s = void 0 !== t && t || "undefined" != typeof self && self || window,
            r = Function.prototype.apply;

        function i(t, e) {
            this._id = t, this._clearFn = e
        }
        e.setTimeout = function() {
            return new i(r.call(setTimeout, s, arguments), clearTimeout)
        }, e.setInterval = function() {
            return new i(r.call(setInterval, s, arguments), clearInterval)
        }, e.clearTimeout = e.clearInterval = function(t) {
            t && t.close()
        }, i.prototype.unref = i.prototype.ref = function() {}, i.prototype.close = function() {
            this._clearFn.call(s, this._id)
        }, e.enroll = function(t, e) {
            clearTimeout(t._idleTimeoutId), t._idleTimeout = e
        }, e.unenroll = function(t) {
            clearTimeout(t._idleTimeoutId), t._idleTimeout = -1
        }, e._unrefActive = e.active = function(t) {
            clearTimeout(t._idleTimeoutId);
            var e = t._idleTimeout;
            e >= 0 && (t._idleTimeoutId = setTimeout(function() {
                t._onTimeout && t._onTimeout()
            }, e))
        }, n(12), e.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== t && t.setImmediate || this && this.setImmediate, e.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== t && t.clearImmediate || this && this.clearImmediate
    }).call(this, n(3))
}, function(t, e, n) {
    (function(t, e) {
        ! function(t, n) {
            "use strict";
            if (!t.setImmediate) {
                var s, r, i, o, a, c = 1,
                    u = {},
                    h = !1,
                    p = t.document,
                    l = Object.getPrototypeOf && Object.getPrototypeOf(t);
                l = l && l.setTimeout ? l : t, "[object process]" === {}.toString.call(t.process) ? s = function(t) {
                    e.nextTick(function() {
                        y(t)
                    })
                } : ! function() {
                    if (t.postMessage && !t.importScripts) {
                        var e = !0,
                            n = t.onmessage;
                        return t.onmessage = function() {
                            e = !1
                        }, t.postMessage("", "*"), t.onmessage = n, e
                    }
                }() ? t.MessageChannel ? ((i = new MessageChannel).port1.onmessage = function(t) {
                    y(t.data)
                }, s = function(t) {
                    i.port2.postMessage(t)
                }) : p && "onreadystatechange" in p.createElement("script") ? (r = p.documentElement, s = function(t) {
                    var e = p.createElement("script");
                    e.onreadystatechange = function() {
                        y(t), e.onreadystatechange = null, r.removeChild(e), e = null
                    }, r.appendChild(e)
                }) : s = function(t) {
                    setTimeout(y, 0, t)
                } : (o = "setImmediate$" + Math.random() + "$", a = function(e) {
                    e.source === t && "string" == typeof e.data && 0 === e.data.indexOf(o) && y(+e.data.slice(o.length))
                }, t.addEventListener ? t.addEventListener("message", a, !1) : t.attachEvent("onmessage", a), s = function(e) {
                    t.postMessage(o + e, "*")
                }), l.setImmediate = function(t) {
                    "function" != typeof t && (t = new Function("" + t));
                    for (var e = new Array(arguments.length - 1), n = 0; n < e.length; n++) e[n] = arguments[n + 1];
                    var r = {
                        callback: t,
                        args: e
                    };
                    return u[c] = r, s(c), c++
                }, l.clearImmediate = f
            }

            function f(t) {
                delete u[t]
            }

            function y(t) {
                if (h) setTimeout(y, 0, t);
                else {
                    var e = u[t];
                    if (e) {
                        h = !0;
                        try {
                            ! function(t) {
                                var e = t.callback,
                                    s = t.args;
                                switch (s.length) {
                                    case 0:
                                        e();
                                        break;
                                    case 1:
                                        e(s[0]);
                                        break;
                                    case 2:
                                        e(s[0], s[1]);
                                        break;
                                    case 3:
                                        e(s[0], s[1], s[2]);
                                        break;
                                    default:
                                        e.apply(n, s)
                                }
                            }(e)
                        } finally {
                            f(t), h = !1
                        }
                    }
                }
            }
        }("undefined" == typeof self ? void 0 === t ? this : t : self)
    }).call(this, n(3), n(13))
}, function(t, e) {
    var n, s, r = t.exports = {};

    function i() {
        throw new Error("setTimeout has not been defined")
    }

    function o() {
        throw new Error("clearTimeout has not been defined")
    }

    function a(t) {
        if (n === setTimeout) return setTimeout(t, 0);
        if ((n === i || !n) && setTimeout) return n = setTimeout, setTimeout(t, 0);
        try {
            return n(t, 0)
        } catch (e) {
            try {
                return n.call(null, t, 0)
            } catch (e) {
                return n.call(this, t, 0)
            }
        }
    }! function() {
        try {
            n = "function" == typeof setTimeout ? setTimeout : i
        } catch (t) {
            n = i
        }
        try {
            s = "function" == typeof clearTimeout ? clearTimeout : o
        } catch (t) {
            s = o
        }
    }();
    var c, u = [],
        h = !1,
        p = -1;

    function l() {
        h && c && (h = !1, c.length ? u = c.concat(u) : p = -1, u.length && f())
    }

    function f() {
        if (!h) {
            var t = a(l);
            h = !0;
            for (var e = u.length; e;) {
                for (c = u, u = []; ++p < e;) c && c[p].run();
                p = -1, e = u.length
            }
            c = null, h = !1,
                function(t) {
                    if (s === clearTimeout) return clearTimeout(t);
                    if ((s === o || !s) && clearTimeout) return s = clearTimeout, clearTimeout(t);
                    try {
                        s(t)
                    } catch (e) {
                        try {
                            return s.call(null, t)
                        } catch (e) {
                            return s.call(this, t)
                        }
                    }
                }(t)
        }
    }

    function y(t, e) {
        this.fun = t, this.array = e
    }

    function d() {}
    r.nextTick = function(t) {
        var e = new Array(arguments.length - 1);
        if (arguments.length > 1)
            for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
        u.push(new y(t, e)), 1 !== u.length || h || a(f)
    }, y.prototype.run = function() {
        this.fun.apply(null, this.array)
    }, r.title = "browser", r.browser = !0, r.env = {}, r.argv = [], r.version = "", r.versions = {}, r.on = d, r.addListener = d, r.once = d, r.off = d, r.removeListener = d, r.removeAllListeners = d, r.emit = d, r.prependListener = d, r.prependOnceListener = d, r.listeners = function(t) {
        return []
    }, r.binding = function(t) {
        throw new Error("process.binding is not supported")
    }, r.cwd = function() {
        return "/"
    }, r.chdir = function(t) {
        throw new Error("process.chdir is not supported")
    }, r.umask = function() {
        return 0
    }
}]);